/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

void newNode(struct ListNode* list, int data){
    struct ListNode* node = (struct ListNode*)malloc(sizeof(struct ListNode));
    node->val = data;
    node->next = NULL;
    list->next = node;
}

struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){
    if(l1 == NULL && l2 == NULL) return NULL;
    
    if(l1 == NULL && l2 != NULL){
        return l2;
    } else if ( l1 != NULL && l2 == NULL ){
        return l1;
    }
    
    
    struct ListNode* newList;
    struct ListNode* head;
    
    newList = (struct ListNode*)malloc(sizeof(struct ListNode));
    head = newList;
        
    while(l1->next != NULL && l2->next != NULL){
        if(l1->val == NULL && l2->val != NULL){
            newNode(newList, l2->val);
            l2 = l2->next;
            newList = newList->next;
        }
        else if(l2->val == NULL && l1->val != NULL){
            newNode(newList, l1->val);
            l1 = l1->next;
            newList = newList->next;
        }
        else if(l1->val <= l2->val){
            newNode(newList, l1->val);
            l1 = l1->next;
            newList = newList->next;
        }
        else if(l2->val <= l1->val){
            newNode(newList, l2->val);
            l2 = l2->next;
            newList = newList->next;
        }
        
    }
    
  //  newList = newList->next;
    
    return head->next;
}
